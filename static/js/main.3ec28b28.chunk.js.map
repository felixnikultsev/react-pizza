{"version":3,"sources":["assets/images/pizza-logo.svg","assets/images/empty-cart.png","components/Header.jsx","components/Button.jsx","components/Categories.jsx","components/Sort.jsx","components/ProductBlock/index.jsx","components/ProductBlock/Loader.jsx","components/CartItem.jsx","redux/actions/pizzas.js","pages/Home.jsx","redux/actions/filters.js","redux/actions/cart.js","pages/Cart.jsx","App.js","redux/reducers/pizzas.js","redux/reducers/filters.js","redux/reducers/cart.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Header","useSelector","cart","totalCount","totalPrice","className","to","width","src","logo","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Button","onClick","outline","children","classNames","Categories","React","memo","items","onClickCategory","activeCategory","map","item","index","key","Sort","activeSortType","onClickSortType","sortRef","useRef","useState","visibleSortPopup","setVisibleSortPopup","currentSortLabel","find","obj","type","name","handleOutsideClick","e","path","includes","current","useEffect","document","body","addEventListener","ref","ProductBlock","id","imageUrl","types","sizes","price","onClickAddPizza","addedCount","activeType","setActiveType","activeSize","setActiveSize","availableTypes","onSelectType","active","disabled","size","onSelectSize","pizzaObj","Loader","props","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","CartItem","onRemoveCartItem","onPlusCartItem","onMinusCartItem","setIsLoaded","value","payload","setPizzas","categoriesItems","sortItems","order","Home","dispatch","useDispatch","pizzas","isLoaded","filters","category","sortBy","cartItems","axios","get","then","data","fetchPizzas","useCallback","setCategory","addPizzaToCart","length","Array","_","Cart","addedPizzas","Object","values","window","confirm","removeCartItem","plusCartItem","minusCartItem","role","aria-label","emptyCartImage","App","exact","component","initialState","state","action","getCurrentPrice","arr","reduce","sum","getTotalValue","currentPizzaItems","newItems","oldPizzaItems","slice","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3ec28b28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza-logo.f3327011.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.ceb2faf0.png\";","import React from 'react';\nimport logo from '../assets/images/pizza-logo.svg';\nimport { Button } from '../components';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nfunction Header() {\n    const { totalCount, totalPrice } = useSelector(({ cart }) => ({\n        totalCount: cart.totalCount,\n        totalPrice: cart.totalPrice,\n    }));\n\n    return (\n        <div className=\"header\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"header__logo\">\n                    <img width=\"38\" src={logo} alt=\"Pizza logo\" />\n                    <div>\n                        <h1>React Pizza</h1>\n                        <p>самая вкусная пицца во вселенной</p>\n                    </div>\n                </Link>\n                <div className=\"header__cart\">\n                    <Link to=\"/cart\">\n                        <Button className=\"button--cart\">\n                            <span>{totalPrice} ₽</span>\n                            <div className=\"button__delimiter\"></div>\n                            <svg\n                                width=\"18\"\n                                height=\"18\"\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                            </svg>\n                            <span>{totalCount}</span>\n                        </Button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport classNames from 'classnames';\n\nfunction Button({ onClick, className, outline, children }) {\n    return (\n        <button\n            onClick={onClick}\n            className={classNames('button', className, {\n                'button--outline': outline,\n            })}>\n            {children}\n        </button>\n    );\n}\n\nexport default Button;\n","import React from 'react';\n\nconst Categories = React.memo(function Categories({ items, onClickCategory, activeCategory }) {\n    return (\n        <div className=\"categories\">\n            <ul>\n                <li\n                    onClick={() => onClickCategory(null)}\n                    className={activeCategory === null ? 'active' : ''}>\n                    Все\n                </li>\n                {items &&\n                    items.map((item, index) => (\n                        <li\n                            key={`${item}_${index}`}\n                            onClick={() => onClickCategory(index)}\n                            className={activeCategory === index ? 'active' : ''}>\n                            {item}\n                        </li>\n                    ))}\n            </ul>\n        </div>\n    );\n});\n\nexport default Categories;\n","import React from 'react';\n\nconst Sort = React.memo(function Sort({ items, activeSortType, onClickSortType }) {\n    const sortRef = React.useRef(null);\n    const [visibleSortPopup, setVisibleSortPopup] = React.useState(false);\n    const currentSortLabel = items.find((obj) => obj.type === activeSortType).name;\n\n    const toggleSortPopup = () => {\n        setVisibleSortPopup(!visibleSortPopup);\n    };\n\n    const handleOutsideClick = (e) => {\n        if (!e.path.includes(sortRef.current)) setVisibleSortPopup(false);\n    };\n\n    // const onSelectItem = (index) => {\n    //     setActiveItem(index);\n    // };\n\n    React.useEffect(() => {\n        document.body.addEventListener('click', handleOutsideClick);\n    }, []);\n\n    return (\n        <div className=\"sort\" ref={sortRef}>\n            <div className=\"sort__label\">\n                <svg\n                    className={visibleSortPopup ? 'rotated' : ''}\n                    width=\"10\"\n                    height=\"6\"\n                    viewBox=\"0 0 10 6\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                        fill=\"#2C2C2C\"\n                    />\n                </svg>\n                <b>Сортировка по:</b>\n                <span onClick={toggleSortPopup}>{currentSortLabel}</span>\n            </div>\n            {visibleSortPopup && (\n                <div className=\"sort__popup\">\n                    <ul>\n                        {items &&\n                            items.map((obj, index) => (\n                                <li\n                                    key={`${obj.type}_${index}`}\n                                    onClick={() => onClickSortType(obj)}\n                                    className={activeSortType === obj.type ? 'active' : ''}>\n                                    {obj.name}\n                                </li>\n                            ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default Sort;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button } from '../../components';\n\nfunction ProductBlock({ id, imageUrl, name, types, sizes, price, onClickAddPizza, addedCount }) {\n    const [activeType, setActiveType] = React.useState(types[0]);\n    const [activeSize, setActiveSize] = React.useState(sizes[0]);\n\n    const availableTypes = ['тонкое', 'традиционное'];\n    const availableSizes = [26, 30, 40];\n\n    const onSelectType = (index) => {\n        setActiveType(index);\n    };\n\n    const onSelectSize = (size) => {\n        setActiveSize(size);\n    };\n\n    const handleAddPizza = () => {\n        const pizzaObj = {\n            id,\n            imageUrl,\n            name,\n            type: availableTypes[activeType],\n            size: activeSize,\n            price,\n        };\n        onClickAddPizza(pizzaObj);\n    };\n\n    return (\n        <div className=\"pizza-block\">\n            <img className=\"pizza-block__image\" src={imageUrl} alt=\"Pizza\" />\n            <h4 className=\"pizza-block__title\">{name}</h4>\n            <div className=\"pizza-block__selector\">\n                <ul>\n                    {availableTypes.map((type, index) => (\n                        <li\n                            key={`${type}_${index}`}\n                            onClick={() => onSelectType(index)}\n                            className={classNames({\n                                active: activeType === index,\n                                disabled: !types.includes(index),\n                            })}>\n                            {type}\n                        </li>\n                    ))}\n                </ul>\n                <ul>\n                    {availableSizes.map((size, index) => (\n                        <li\n                            key={`${size}_${index}`}\n                            onClick={() => onSelectSize(size)}\n                            className={classNames({\n                                active: activeSize === size,\n                                disabled: !sizes.includes(size),\n                            })}>\n                            {size} см.\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div className=\"pizza-block__bottom\">\n                <div className=\"pizza-block__price\">от {price} ₽</div>\n                <Button onClick={handleAddPizza} className=\"button--add\" outline>\n                    <svg\n                        width=\"12\"\n                        height=\"12\"\n                        viewBox=\"0 0 12 12\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                            fill=\"white\"\n                        />\n                    </svg>\n                    <span>Добавить</span>\n                    {addedCount && <i>{addedCount}</i>}\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductBlock;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst Loader = (props) => (\n    <ContentLoader\n        className=\"pizza-block\"\n        speed={2}\n        width={280}\n        height={460}\n        viewBox=\"0 0 280 460\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n        {...props}>\n        <circle cx=\"140\" cy=\"130\" r=\"130\" />\n        <rect x=\"0\" y=\"276\" rx=\"5\" ry=\"5\" width=\"280\" height=\"24\" />\n        <rect x=\"0\" y=\"314\" rx=\"10\" ry=\"10\" width=\"280\" height=\"84\" />\n        <rect x=\"130\" y=\"416\" rx=\"30\" ry=\"30\" width=\"150\" height=\"44\" />\n        <rect x=\"0\" y=\"424\" rx=\"5\" ry=\"5\" width=\"90\" height=\"27\" />\n    </ContentLoader>\n);\n\nexport default Loader;\n","import React from 'react';\nimport { Button } from '../components';\n\nfunction CartItem({\n    id,\n    imageUrl,\n    name,\n    type,\n    size,\n    totalPrice,\n    totalCount,\n    onRemoveCartItem,\n    onPlusCartItem,\n    onMinusCartItem,\n}) {\n    const handleRemoveCartItem = () => {\n        onRemoveCartItem(id);\n    };\n\n    const handlePlusItem = () => {\n        onPlusCartItem(id);\n    };\n\n    const handleMinusItem = () => {\n        onMinusCartItem(id);\n    };\n\n    return (\n        <div className=\"cart__item\">\n            <div className=\"cart__item-img\">\n                <img className=\"pizza-block__image\" src={imageUrl} alt=\"Pizza\" />\n            </div>\n            <div className=\"cart__item-info\">\n                <h3>{name}</h3>\n                <p>\n                    {type} тесто, {size} см.\n                </p>\n            </div>\n            <div className=\"cart__item-count\">\n                <Button\n                    onClick={handleMinusItem}\n                    className=\"button--circle cart__item-count-minus\"\n                    outline>\n                    <svg\n                        width=\"10\"\n                        height=\"10\"\n                        viewBox=\"0 0 10 10\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                            fill=\"#EB5A1E\"\n                        />\n                        <path\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                            fill=\"#EB5A1E\"\n                        />\n                    </svg>\n                </Button>\n                <b>{totalCount}</b>\n                <Button\n                    onClick={handlePlusItem}\n                    className=\"button--circle cart__item-count-plus\"\n                    outline>\n                    <svg\n                        width=\"10\"\n                        height=\"10\"\n                        viewBox=\"0 0 10 10\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                            fill=\"#EB5A1E\"\n                        />\n                        <path\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                            fill=\"#EB5A1E\"\n                        />\n                    </svg>\n                </Button>\n            </div>\n            <div className=\"cart__item-price\">\n                <b>{totalPrice} ₽</b>\n            </div>\n            <div className=\"cart__item-remove\">\n                <Button onClick={handleRemoveCartItem} className=\"button--circle\" outline>\n                    <svg\n                        width=\"10\"\n                        height=\"10\"\n                        viewBox=\"0 0 10 10\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                            fill=\"#EB5A1E\"\n                        />\n                        <path\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                            fill=\"#EB5A1E\"\n                        />\n                    </svg>\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default CartItem;\n","import axios from 'axios';\n\nconst setIsLoaded = (value) => ({\n    type: 'SET_IS_LOADED',\n    payload: value,\n});\n\nexport const fetchPizzas = (category, { type, order }) => (dispatch) => {\n    dispatch(setIsLoaded(false));\n    axios\n        .get(\n            `https://my-json-server.typicode.com/felixnikultsev/react-pizza-server/pizzas?${\n                category !== null ? `category=${category}` : ''\n            }&_sort=${type}&_order=${order}`,\n        )\n        .then(({ data }) => {\n            dispatch(setPizzas(data));\n            dispatch(setIsLoaded(true));\n        });\n};\n\nconst setPizzas = (items) => ({\n    type: 'SET_PIZZAS',\n    payload: items,\n});\n","import React from 'react';\nimport { Categories, Sort, ProductBlock, ProductLoader } from '../components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCategory, setSortBy } from '../redux/actions/filters';\nimport { fetchPizzas } from '../redux/actions/pizzas';\nimport { addPizzaToCart } from '../redux/actions/cart';\n\nconst categoriesItems = ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые', 'Новые'];\nconst sortItems = [\n    { name: 'популярности', type: 'rating', order: 'desc' },\n    { name: 'цене', type: 'price', order: 'asc' },\n    { name: 'алфавиту', type: 'name', order: 'asc' },\n];\n\nfunction Home() {\n    const dispatch = useDispatch();\n    const { items, isLoaded } = useSelector(({ pizzas }) => ({\n        items: pizzas.items,\n        isLoaded: pizzas.isLoaded,\n    }));\n    const { category, sortBy } = useSelector(({ filters }) => ({\n        category: filters.category,\n        sortBy: filters.sortBy,\n    }));\n    const cartItems = useSelector(({ cart }) => cart.items);\n\n    React.useEffect(() => {\n        dispatch(fetchPizzas(category, sortBy));\n    }, [category, sortBy]);\n\n    const onClickCategory = React.useCallback((index) => {\n        dispatch(setCategory(index));\n    }, []);\n\n    const onClickSortType = React.useCallback((sortBy) => {\n        dispatch(setSortBy(sortBy));\n    }, []);\n\n    const onClickAddPizza = (pizzaObj) => {\n        dispatch(addPizzaToCart(pizzaObj));\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"content__top\">\n                <Categories\n                    items={categoriesItems}\n                    onClickCategory={onClickCategory}\n                    activeCategory={category}\n                />\n                <Sort\n                    items={sortItems}\n                    activeSortType={sortBy.type}\n                    onClickSortType={onClickSortType}\n                />\n            </div>\n            <h2 className=\"content__title\">Все пиццы</h2>\n            <div className=\"content__items\">\n                {isLoaded\n                    ? items.map((obj, index) => (\n                          <ProductBlock\n                              key={`${obj.name}_${index}`}\n                              onClickAddPizza={onClickAddPizza}\n                              {...obj}\n                              addedCount={\n                                  cartItems[obj.id] &&\n                                  cartItems[obj.id].items.length > 0 &&\n                                  cartItems[obj.id].items.length\n                              }\n                          />\n                      ))\n                    : Array(10)\n                          .fill(0)\n                          .map((_, index) => <ProductLoader key={index} />)}\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","export const setSortBy = ({ type, order }) => {\n    return {\n        type: 'SET_SORT_BY',\n        payload: { type, order },\n    };\n};\n\nexport const setCategory = (index) => {\n    return {\n        type: 'SET_CATEGORY',\n        payload: index,\n    };\n};\n","export const addPizzaToCart = (pizzaObj) => ({\n    type: 'ADD_PIZZA_TO_CART',\n    payload: pizzaObj,\n});\n\nexport const clearCart = () => ({\n    type: 'CLEAR_CART',\n});\n\nexport const removeCartItem = (id) => ({\n    type: 'REMOVE_CART_ITEM',\n    payload: id,\n});\n\nexport const plusCartItem = (id) => ({\n    type: 'PLUS_CART_ITEM',\n    payload: id,\n});\n\nexport const minusCartItem = (id) => ({\n    type: 'MINUS_CART_ITEM',\n    payload: id,\n});\n","import React from 'react';\nimport { CartItem } from '../components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearCart, removeCartItem, plusCartItem, minusCartItem } from '../redux/actions/cart';\nimport { Link } from 'react-router-dom';\nimport emptyCartImage from '../assets/images/empty-cart.png';\n\nfunction Cart() {\n    const dispatch = useDispatch();\n    const { items, totalCount, totalPrice } = useSelector(({ cart }) => cart);\n\n    const addedPizzas = Object.values(items).map((obj) => obj.items[0] && obj.items[0]);\n\n    const onClearCart = () => {\n        if (window.confirm('Вы действительно хотите удалить все товары?')) dispatch(clearCart());\n    };\n\n    const onRemoveCartItem = (id) => {\n        if (window.confirm('Вы действительно хотите удалить данный товар?'))\n            dispatch(removeCartItem(id));\n    };\n\n    const onPlusCartItem = (id) => {\n        dispatch(plusCartItem(id));\n    };\n\n    const onMinusCartItem = (id) => {\n        dispatch(minusCartItem(id));\n    };\n\n    return (\n        <div className=\"container container--cart\">\n            {totalCount ? (\n                <div className=\"cart\">\n                    <div className=\"cart__top\">\n                        <h2 className=\"content__title\">\n                            <svg\n                                width=\"18\"\n                                height=\"18\"\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\n                                    stroke=\"white\"\n                                    strokeWidth=\"1.8\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                            </svg>\n                            Корзина\n                        </h2>\n                        <div className=\"cart__clear\">\n                            <svg\n                                width=\"20\"\n                                height=\"20\"\n                                viewBox=\"0 0 20 20\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M2.5 5H4.16667H17.5\"\n                                    stroke=\"#B6B6B6\"\n                                    strokeWidth=\"1.2\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\n                                    stroke=\"#B6B6B6\"\n                                    strokeWidth=\"1.2\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M8.33337 9.16667V14.1667\"\n                                    stroke=\"#B6B6B6\"\n                                    strokeWidth=\"1.2\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                                <path\n                                    d=\"M11.6666 9.16667V14.1667\"\n                                    stroke=\"#B6B6B6\"\n                                    strokeWidth=\"1.2\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                />\n                            </svg>\n\n                            <span onClick={onClearCart}>Очистить корзину</span>\n                        </div>\n                    </div>\n                    <div className=\"content__items\">\n                        {addedPizzas.map((obj) => {\n                            if (obj)\n                                return (\n                                    <CartItem\n                                        key={`${obj.name}_${obj.id}`}\n                                        onRemoveCartItem={onRemoveCartItem}\n                                        onPlusCartItem={onPlusCartItem}\n                                        onMinusCartItem={onMinusCartItem}\n                                        {...obj}\n                                        totalPrice={items[obj.id].totalPrice}\n                                        totalCount={items[obj.id].items.length}\n                                    />\n                                );\n                            return undefined;\n                        })}\n                    </div>\n                    <div className=\"cart__bottom\">\n                        <div className=\"cart__bottom-details\">\n                            <span>\n                                Всего пицц: <b>{totalCount} шт.</b>{' '}\n                            </span>\n                            <span>\n                                Сумма заказа: <b>{totalPrice} ₽</b>{' '}\n                            </span>\n                        </div>\n                        <div className=\"cart__bottom-buttons\">\n                            <Link to=\"/\" className=\"button button--outline button--add go-back-btn\">\n                                <svg\n                                    width=\"8\"\n                                    height=\"14\"\n                                    viewBox=\"0 0 8 14\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path\n                                        d=\"M7 13L1 6.93015L6.86175 1\"\n                                        stroke=\"#D3D3D3\"\n                                        strokeWidth=\"1.5\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                    />\n                                </svg>\n                                <span>Вернуться назад</span>\n                            </Link>\n                            <div className=\"button pay-btn\">\n                                <span>Оплатить сейчас</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"cart cart--empty\">\n                    <h2>\n                        Корзина пустая{' '}\n                        <span role=\"img\" aria-label=\"emoji\">\n                            😕\n                        </span>\n                    </h2>\n                    <p>\n                        Вероятней всего, вы не заказывали ещё пиццу.\n                        <br />\n                        Для того, чтобы заказать пиццу, перейди на главную страницу.\n                    </p>\n                    <img src={emptyCartImage} alt=\"Empty cart\" />\n                    <Link to=\"/\" className=\"button button--black\">\n                        <span>Вернуться назад</span>\n                    </Link>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Cart;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Header } from './components';\nimport { Home, Cart } from './pages';\n\nfunction App() {\n    return (\n        <div className=\"wrapper\">\n            <Header />\n            <div className=\"content\">\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/cart\" component={Cart} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const initialState = {\n    items: [],\n    isLoaded: false,\n};\n\nconst pizzas = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_PIZZAS':\n            return {\n                ...state,\n                items: action.payload,\n            };\n        case 'SET_IS_LOADED':\n            return {\n                ...state,\n                isLoaded: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default pizzas;\n","const initialState = {\n    category: null,\n    sortBy: {\n        type: 'rating',\n        order: 'desc',\n    },\n};\n\nconst filters = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_SORT_BY':\n            return {\n                ...state,\n                sortBy: action.payload,\n            };\n        case 'SET_CATEGORY':\n            return {\n                ...state,\n                category: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default filters;\n","const initialState = {\n    items: {},\n    totalPrice: 0,\n    totalCount: 0,\n};\n\nconst getCurrentPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\n\nconst getTotalValue = (items, key) =>\n    Object.values(items)\n        .map((obj) => {\n            if (key === 'price') return obj.totalPrice;\n            if (key === 'count') return obj.items.length;\n            return undefined;\n        })\n        .reduce((sum, value) => value + sum, 0);\n\nconst cart = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_PIZZA_TO_CART':\n            const currentPizzaItems = !state.items[action.payload.id]\n                ? [action.payload]\n                : [...state.items[action.payload.id].items, action.payload];\n\n            const newItems = {\n                ...state.items,\n                [action.payload.id]: {\n                    items: currentPizzaItems,\n                    totalPrice: getCurrentPrice(currentPizzaItems),\n                },\n            };\n\n            const totalPrice = getTotalValue(newItems, 'price');\n            const totalCount = getTotalValue(newItems, 'count');\n\n            return {\n                ...state,\n                items: newItems,\n                totalCount,\n                totalPrice,\n            };\n        case 'PLUS_CART_ITEM': {\n            const currentPizzaItems = [\n                ...state.items[action.payload].items,\n                state.items[action.payload].items[0],\n            ];\n            const newItems = {\n                ...state.items,\n                [action.payload]: {\n                    items: currentPizzaItems,\n                    totalPrice: getCurrentPrice(currentPizzaItems),\n                },\n            };\n\n            const totalPrice = getTotalValue(newItems, 'price');\n            const totalCount = getTotalValue(newItems, 'count');\n\n            return {\n                ...state,\n                items: newItems,\n                totalPrice,\n                totalCount,\n            };\n        }\n        case 'MINUS_CART_ITEM': {\n            const oldPizzaItems = state.items[action.payload].items;\n            const currentPizzaItems = oldPizzaItems.length > 1 ? oldPizzaItems.slice(1) : [];\n            const newItems = {\n                ...state.items,\n                [action.payload]: {\n                    items: currentPizzaItems,\n                    totalPrice: getCurrentPrice(currentPizzaItems),\n                },\n            };\n\n            const totalPrice = getTotalValue(newItems, 'price');\n            const totalCount = getTotalValue(newItems, 'count');\n\n            return {\n                ...state,\n                items: newItems,\n                totalPrice,\n                totalCount,\n            };\n        }\n        case 'REMOVE_CART_ITEM': {\n            const newItems = {\n                ...state.items,\n            };\n\n            delete newItems[action.payload];\n\n            const totalPrice = getTotalValue(newItems, 'price');\n            const totalCount = getTotalValue(newItems, 'count');\n\n            return {\n                items: newItems,\n                totalCount,\n                totalPrice,\n            };\n        }\n        case 'CLEAR_CART':\n            return {\n                items: {},\n                totalPrice: 0,\n                totalCount: 0,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default cart;\n","import { combineReducers } from 'redux';\n\nimport pizzas from './pizzas';\nimport filters from './filters';\nimport cart from './cart';\n\nconst rootReducer = combineReducers({\n    pizzas,\n    filters,\n    cart,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './sass/app.scss';\nimport App from './App';\n\nimport store from './redux/store';\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}